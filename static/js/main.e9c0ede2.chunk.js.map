{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setSortType","startWork","setStartWork","isReversed","setIsReversed","charsLimit","setCharsLimit","goods","visibleGoods","filter","good","length","ALPHABET","sort","good1","good2","localeCompare","LENGTH","reverse","getReorderedGoods","className","type","onClick","e","currentTarget","value","map","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,oDAbCC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAML,IA6BaE,EAAgB,WAC3B,MAAgCC,mBAASH,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAkCH,oBAAS,GAA3C,mBAAOI,EAAP,KAAkBC,EAAlB,KACA,EAAoCL,oBAAS,GAA7C,mBAAOM,EAAP,KAAmBC,EAAnB,KACA,EAAoCP,mBAAS,GAA7C,mBAAOQ,EAAP,KAAmBC,EAAnB,KAEMC,EAnCkB,SACxBA,EACAR,EACAI,EACAE,GAEA,IAAIG,EAAY,YAAOD,GAIvB,OAFAC,EAAeA,EAAaC,QAAO,SAAAC,GAAI,OAAIA,EAAKC,QAAUN,KAElDN,GACN,KAAKL,EAASkB,SACZJ,EAAaK,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MACxD,MACF,KAAKrB,EAASuB,OACZT,EAAaK,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMH,OAASI,EAAMJ,UAE3D,KAAKjB,EAASI,MAShB,OAJIK,GACFK,EAAaU,UAGRV,EASOW,CACZxB,EACAI,EACAI,EACAE,GASF,OACE,sBAAKe,UAAU,MAAf,WACInB,GACA,wBACEoB,KAAK,SACLD,UAAU,4CACVE,QAAS,kBAAMpB,GAAa,IAH9B,mBASDD,GACC,sBAAKmB,UAAU,wCAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAU,qBACVE,QAAS,kBAAMtB,EAAYN,EAASkB,WAHtC,iCAQA,wBACES,KAAK,SACLD,UAAU,qBACVE,QAAS,kBAAMtB,EAAYN,EAASuB,SAHtC,4BAQA,wBACEI,KAAK,SACLC,QAAS,kBAAMlB,GAAeD,IAC9BiB,UAAU,wBAHZ,qBAQA,qBAAKA,UAAU,iBAAf,SACE,yBACEA,UAAU,oCACVE,QAAS,SAACC,GAAD,OAAOjB,GAAeiB,EAAEC,cAAcC,QAFjD,UAIE,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,qBAIJ,wBACEJ,KAAK,SACLC,QAjEE,WACZlB,GAAc,GACdJ,EAAYN,EAASI,MACrBQ,EAAc,IA+DJc,UAAU,uBAHZ,sBASF,oBAAIA,UAAU,QAAd,SACGb,EAAMmB,KAAI,SAAAhB,GAAI,OACb,oBAAeU,UAAU,cAAzB,SACGV,GADMA,eCxIvBiB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e9c0ede2.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nconst getReorderedGoods = (\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n  charsLimit: number,\n) => {\n  let visibleGoods = [...goods];\n\n  visibleGoods = visibleGoods.filter(good => good.length >= charsLimit);\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort((good1, good2) => good1.localeCompare(good2));\n      break;\n    case SortType.LENGTH:\n      visibleGoods.sort((good1, good2) => good1.length - good2.length);\n      break;\n    case SortType.NONE:\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n};\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [startWork, setStartWork] = useState(false);\n  const [isReversed, setIsReversed] = useState(false);\n  const [charsLimit, setCharsLimit] = useState(1);\n\n  const goods = getReorderedGoods(\n    goodsFromServer,\n    sortType,\n    isReversed,\n    charsLimit,\n  );\n\n  const reset = () => {\n    setIsReversed(false);\n    setSortType(SortType.NONE);\n    setCharsLimit(1);\n  };\n\n  return (\n    <div className=\"App\">\n      {!startWork && (\n        <button\n          type=\"button\"\n          className=\"button is-link is-outlined is-large start\"\n          onClick={() => setStartWork(true)}\n        >\n          Start\n        </button>\n      )}\n\n      {startWork && (\n        <div className=\"box has-background-link-light contant\">\n          <div className=\"buttons\">\n            <button\n              type=\"button\"\n              className=\"button is-link btn\"\n              onClick={() => setSortType(SortType.ALPHABET)}\n            >\n              Sort alphabetically\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"button is-link btn\"\n              onClick={() => setSortType(SortType.LENGTH)}\n            >\n              Sort by length\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={() => setIsReversed(!isReversed)}\n              className=\"button is-warning btn\"\n            >\n              Reverse\n            </button>\n\n            <div className=\"select is-link\">\n              <select\n                className=\"has-background-warning is-warning\"\n                onClick={(e) => setCharsLimit(+e.currentTarget.value)}\n              >\n                <option value=\"1\">1</option>\n                <option value=\"2\">2</option>\n                <option value=\"3\">3</option>\n                <option value=\"4\">4</option>\n                <option value=\"5\">5</option>\n                <option value=\"6\">6</option>\n                <option value=\"7\">7</option>\n                <option value=\"8\">8</option>\n                <option value=\"9\">9</option>\n                <option value=\"10\">10</option>\n              </select>\n            </div>\n\n            <button\n              type=\"button\"\n              onClick={reset}\n              className=\"button is-danger btn\"\n            >\n              Reset\n            </button>\n          </div>\n\n          <ul className=\"Goods\">\n            {goods.map(good => (\n              <li key={good} className=\"Goods__item\">\n                {good}\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}